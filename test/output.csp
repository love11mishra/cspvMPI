//@@MpiTrace@@

channel ch_0_1_1_s 0;
channel ch_0_2_1 2;
channel ch_0_4_1 2;
channel ch_0_2_1_s 0;
channel ch_0_3_1 2;
channel ch_0_3_1_s 0;
channel ch_0_1_1 2;
channel ch_0_4_1_s 0;
channel ch_0_0_3_s 0;
channel ch_0_0_3 2;
channel ch_1_0_3_s 0;
channel ch_1_0_3 2;
channel ch_2_0_3_s 0;
channel ch_2_0_3 2;
channel ch_3_0_3_s 0;
channel ch_3_0_3 2;
channel ch_4_0_3_s 0;
channel ch_4_0_3 2;

var threshold = 1024;
var exit_ = false;
var num_procs = 5;
var RecvBuf_3_0_A_90[2];
var RecvBuf_1_0_A_90[2];
var RecvBuf_2_0_A_90[2];
var SendBuf_0_1_1_115 = [0, 4];
var RecvBuf_4_0_A_90[2];
var SendBuf_0_2_1_115 = [1, 4];
var SendBuf_0_3_1_115 = [2, 4];
var SendBuf_0_4_1_115 = [3, 4];
var RecvBuf_0_A_3_139[2];
var SendBuf_1_0_3_96 = [69, 4];
var SendBuf_2_0_3_96 = [69, 4];
var SendBuf_3_0_3_96 = [69, 4];
var SendBuf_4_0_3_96 = [69, 4];

// Line 90
MPI_Recv_3_0_A_90() = if( 4 > threshold ) { ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip []
					ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip []
					ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip []
					ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip }
					else { ch_0_4_1?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip [] ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip []
					ch_0_3_1?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip [] ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip []
					ch_0_2_1?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip [] ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip []
					ch_0_1_1?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip [] ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_3_0_A_90 = x} -> Skip };
// Line 90
MPI_Recv_1_0_A_90() = if( 4 > threshold ) { ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip []
					ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip []
					ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip []
					ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip }
					else { ch_0_4_1?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip [] ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip []
					ch_0_3_1?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip [] ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip []
					ch_0_2_1?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip [] ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip []
					ch_0_1_1?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip [] ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_1_0_A_90 = x} -> Skip };
// Line 90
MPI_Recv_2_0_A_90() = if( 4 > threshold ) { ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip []
					ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip []
					ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip []
					ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip }
					else { ch_0_4_1?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip [] ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip []
					ch_0_3_1?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip [] ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip []
					ch_0_2_1?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip [] ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip []
					ch_0_1_1?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip [] ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_2_0_A_90 = x} -> Skip };
// Line 115
MPI_Send_0_1_1_115() = if( 4 > threshold ) { ch_0_1_1_s!SendBuf_0_1_1_115 -> Skip } else { ch_0_1_1!SendBuf_0_1_1_115 -> Skip };
// Line 90
MPI_Recv_4_0_A_90() = if( 4 > threshold ) { ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip []
					ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip []
					ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip []
					ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip }
					else { ch_0_4_1?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip [] ch_0_4_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip []
					ch_0_3_1?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip [] ch_0_3_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip []
					ch_0_2_1?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip [] ch_0_2_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip []
					ch_0_1_1?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip [] ch_0_1_1_s?[x[1] <= 4]x ->{RecvBuf_4_0_A_90 = x} -> Skip };
// Line 115
MPI_Send_0_2_1_115() = if( 4 > threshold ) { ch_0_2_1_s!SendBuf_0_2_1_115 -> Skip } else { ch_0_2_1!SendBuf_0_2_1_115 -> Skip };
// Line 115
MPI_Send_0_3_1_115() = if( 4 > threshold ) { ch_0_3_1_s!SendBuf_0_3_1_115 -> Skip } else { ch_0_3_1!SendBuf_0_3_1_115 -> Skip };
// Line 115
MPI_Send_0_4_1_115() = if( 4 > threshold ) { ch_0_4_1_s!SendBuf_0_4_1_115 -> Skip } else { ch_0_4_1!SendBuf_0_4_1_115 -> Skip };
// Line 139
MPI_Recv_0_A_3_139() = if( 4 > threshold ) { ch_4_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_3_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_2_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_1_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_0_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip }
					else { ch_4_0_3?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip [] ch_4_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_3_0_3?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip [] ch_3_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_2_0_3?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip [] ch_2_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_1_0_3?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip [] ch_1_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip []
					ch_0_0_3?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip [] ch_0_0_3_s?[x[1] <= 4]x ->{RecvBuf_0_A_3_139 = x} -> Skip };
// Line 96
MPI_Send_1_0_3_96() = if( 4 > threshold ) { ch_1_0_3_s!SendBuf_1_0_3_96 -> Skip } else { ch_1_0_3!SendBuf_1_0_3_96 -> Skip };
// Line 96
MPI_Send_2_0_3_96() = if( 4 > threshold ) { ch_2_0_3_s!SendBuf_2_0_3_96 -> Skip } else { ch_2_0_3!SendBuf_2_0_3_96 -> Skip };
// Line 96
MPI_Send_3_0_3_96() = if( 4 > threshold ) { ch_3_0_3_s!SendBuf_3_0_3_96 -> Skip } else { ch_3_0_3!SendBuf_3_0_3_96 -> Skip };
// Line 96
MPI_Send_4_0_3_96() = if( 4 > threshold ) { ch_4_0_3_s!SendBuf_4_0_3_96 -> Skip } else { ch_4_0_3!SendBuf_4_0_3_96 -> Skip };

P3() = (MPI_Recv_3_0_A_90(); MPI_Send_3_0_3_96())[][exit_ == true]Skip;
P1() = (MPI_Recv_1_0_A_90(); MPI_Send_1_0_3_96())[][exit_ == true]Skip;
P2() = (MPI_Recv_2_0_A_90(); MPI_Send_2_0_3_96())[][exit_ == true]Skip;
P0() = (MPI_Send_0_1_1_115(); MPI_Send_0_2_1_115(); MPI_Send_0_3_1_115(); MPI_Send_0_4_1_115(); MPI_Recv_0_A_3_139(); MPI_Recv_0_A_3_139(); MPI_Recv_0_A_3_139(); MPI_Recv_0_A_3_139())[][exit_ == true]Skip;
P4() = (MPI_Recv_4_0_A_90(); MPI_Send_4_0_3_96())[][exit_ == true]Skip;
Prog() = P3() || P1() || P2() || P0() || P4();

#assert Prog() deadlockfree;
