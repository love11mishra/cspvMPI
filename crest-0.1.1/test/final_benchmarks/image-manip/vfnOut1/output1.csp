//@@MpiTrace@@


var threshold = 131072;
var exit_ = false;
var num_procs = 10;
var Bcast_0_56_1140850688 = 0;

// Line 273
MPI_Bcast_0_0_56_1140850688() = MPI_Bcast_0_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_0_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_1_0_56_1140850688() = MPI_Bcast_1_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_1_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_2_0_56_1140850688() = MPI_Bcast_2_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_2_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_3_0_56_1140850688() = MPI_Bcast_3_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_3_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_4_0_56_1140850688() = MPI_Bcast_4_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_4_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_5_0_56_1140850688() = MPI_Bcast_5_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_5_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_6_0_56_1140850688() = MPI_Bcast_6_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_6_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_7_0_56_1140850688() = MPI_Bcast_7_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_7_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_8_0_56_1140850688() = MPI_Bcast_8_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_8_0_56_1140850688_ends -> Skip);
// Line 273
MPI_Bcast_9_0_56_1140850688() = MPI_Bcast_9_0_56_1140850688_starts -> {Bcast_0_56_1140850688++} -> ([Bcast_0_56_1140850688 %  num_procs == 0]eBcast_0_56_1140850688 -> MPI_Bcast_9_0_56_1140850688_ends -> Skip);

P0() = (MPI_Bcast_0_0_56_1140850688())[][exit_ == true]Skip;
P1() = (MPI_Bcast_1_0_56_1140850688())[][exit_ == true]Skip;
P2() = (MPI_Bcast_2_0_56_1140850688())[][exit_ == true]Skip;
P3() = (MPI_Bcast_3_0_56_1140850688())[][exit_ == true]Skip;
P4() = (MPI_Bcast_4_0_56_1140850688())[][exit_ == true]Skip;
P5() = (MPI_Bcast_5_0_56_1140850688())[][exit_ == true]Skip;
P6() = (MPI_Bcast_6_0_56_1140850688())[][exit_ == true]Skip;
P7() = (MPI_Bcast_7_0_56_1140850688())[][exit_ == true]Skip;
P8() = (MPI_Bcast_8_0_56_1140850688())[][exit_ == true]Skip;
P9() = (MPI_Bcast_9_0_56_1140850688())[][exit_ == true]Skip;
Prog() = P0() || P1() || P2() || P3() || P4() || P5() || P6() || P7() || P8() || P9();
Prog1() = {threshold = 0} -> Prog();

#assert Prog() deadlockfree;
#assert Prog1() deadlockfree;
