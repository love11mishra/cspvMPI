//@@MpiTrace@@

channel ch_1_0_0_s 0;
channel ch_1_0_0 1;
channel ch_2_0_0_s 0;
channel ch_2_0_0 1;
channel ch_3_0_0_s 0;
channel ch_3_0_0 1;

var threshold = 131072;
var exit_ = false;
var num_procs = 4;
var RecvBuf_0_1_0_43[1];
var RecvBuf_0_2_0_43[1];
var RecvBuf_0_3_0_43[1];
var SendBuf_1_0_0_68 = [8];
var SendBuf_2_0_0_68 = [8];
var SendBuf_3_0_0_68 = [8];

// Line 43
MPI_Recv_0_1_0_43() = MPI_Recv_0_1_0_43_starts -> if( 8 > threshold ) { ch_1_0_0_s?[x[0] <= 8]x ->{RecvBuf_0_1_0_43 = x} -> MPI_Recv_0_1_0_43_ends -> Skip }
					else { ch_1_0_0?[x[0] <= 8]x ->{RecvBuf_0_1_0_43 = x} -> MPI_Recv_0_1_0_43_ends -> Skip [] ch_1_0_0_s?[x[0] <= 8]x ->{RecvBuf_0_1_0_43 = x} -> MPI_Recv_0_1_0_43_ends -> Skip };
// Line 43
MPI_Recv_0_2_0_43() = MPI_Recv_0_2_0_43_starts -> if( 8 > threshold ) { ch_2_0_0_s?[x[0] <= 8]x ->{RecvBuf_0_2_0_43 = x} -> MPI_Recv_0_2_0_43_ends -> Skip }
					else { ch_2_0_0?[x[0] <= 8]x ->{RecvBuf_0_2_0_43 = x} -> MPI_Recv_0_2_0_43_ends -> Skip [] ch_2_0_0_s?[x[0] <= 8]x ->{RecvBuf_0_2_0_43 = x} -> MPI_Recv_0_2_0_43_ends -> Skip };
// Line 43
MPI_Recv_0_3_0_43() = MPI_Recv_0_3_0_43_starts -> if( 8 > threshold ) { ch_3_0_0_s?[x[0] <= 8]x ->{RecvBuf_0_3_0_43 = x} -> MPI_Recv_0_3_0_43_ends -> Skip }
					else { ch_3_0_0?[x[0] <= 8]x ->{RecvBuf_0_3_0_43 = x} -> MPI_Recv_0_3_0_43_ends -> Skip [] ch_3_0_0_s?[x[0] <= 8]x ->{RecvBuf_0_3_0_43 = x} -> MPI_Recv_0_3_0_43_ends -> Skip };
// Line 68
MPI_Send_1_0_0_68() = MPI_Send_1_0_0_68_starts -> if( 8 > threshold ) { ch_1_0_0_s!SendBuf_1_0_0_68 -> MPI_Send_1_0_0_68_ends -> Skip } else { ch_1_0_0!SendBuf_1_0_0_68 -> MPI_Send_1_0_0_68_ends -> Skip };
// Line 68
MPI_Send_2_0_0_68() = MPI_Send_2_0_0_68_starts -> if( 8 > threshold ) { ch_2_0_0_s!SendBuf_2_0_0_68 -> MPI_Send_2_0_0_68_ends -> Skip } else { ch_2_0_0!SendBuf_2_0_0_68 -> MPI_Send_2_0_0_68_ends -> Skip };
// Line 68
MPI_Send_3_0_0_68() = MPI_Send_3_0_0_68_starts -> if( 8 > threshold ) { ch_3_0_0_s!SendBuf_3_0_0_68 -> MPI_Send_3_0_0_68_ends -> Skip } else { ch_3_0_0!SendBuf_3_0_0_68 -> MPI_Send_3_0_0_68_ends -> Skip };

P0() = (MPI_Recv_0_1_0_43(); MPI_Recv_0_2_0_43(); MPI_Recv_0_3_0_43())[][exit_ == true]Skip;
P1() = (MPI_Send_1_0_0_68())[][exit_ == true]Skip;
P2() = (MPI_Send_2_0_0_68())[][exit_ == true]Skip;
P3() = (MPI_Send_3_0_0_68())[][exit_ == true]Skip;
Prog() = P0() || P1() || P2() || P3();
Prog1() = {threshold = 0} -> Prog();

#assert Prog() deadlockfree;
#assert Prog1() deadlockfree;
