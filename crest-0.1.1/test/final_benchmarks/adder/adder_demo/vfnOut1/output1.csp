//@@MpiTrace@@

channel ch_0_1_100_s 0;
channel ch_0_1_100 2;
channel ch_0_2_100_s 0;
channel ch_0_2_100 2;
channel ch_0_3_100_s 0;
channel ch_0_3_100 2;
channel ch_0_0_101_s 0;
channel ch_0_0_101 1;
channel ch_1_0_101_s 0;
channel ch_1_0_101 1;
channel ch_2_0_101_s 0;
channel ch_2_0_101 1;
channel ch_3_0_101_s 0;
channel ch_3_0_101 1;

var threshold = 131072;
var exit_ = false;
var num_procs = 4;
var SendBuf_0_1_100_62 = [12];
var SendBuf_0_2_100_62 = [12];
var SendBuf_0_3_100_62 = [12];
var RecvBuf_0_A_101_68[1];
var RecvBuf_1_0_100_78[1];
var SendBuf_1_0_101_83 = [8];
var RecvBuf_2_0_100_78[1];
var SendBuf_2_0_101_83 = [8];
var RecvBuf_3_0_100_78[1];
var SendBuf_3_0_101_83 = [8];

// Line 62
MPI_Send_0_1_100_62() = MPI_Send_0_1_100_62_starts -> if( 12 > threshold ) { ch_0_1_100_s!SendBuf_0_1_100_62 -> MPI_Send_0_1_100_62_ends -> Skip } else { ch_0_1_100!SendBuf_0_1_100_62 -> MPI_Send_0_1_100_62_ends -> Skip };
// Line 62
MPI_Send_0_2_100_62() = MPI_Send_0_2_100_62_starts -> if( 12 > threshold ) { ch_0_2_100_s!SendBuf_0_2_100_62 -> MPI_Send_0_2_100_62_ends -> Skip } else { ch_0_2_100!SendBuf_0_2_100_62 -> MPI_Send_0_2_100_62_ends -> Skip };
// Line 62
MPI_Send_0_3_100_62() = MPI_Send_0_3_100_62_starts -> if( 12 > threshold ) { ch_0_3_100_s!SendBuf_0_3_100_62 -> MPI_Send_0_3_100_62_ends -> Skip } else { ch_0_3_100!SendBuf_0_3_100_62 -> MPI_Send_0_3_100_62_ends -> Skip };
// Line 68
MPI_Recv_0_A_101_68() = MPI_Recv_0_A_101_68_starts -> if( 8 > threshold ) { ch_3_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip []
					ch_2_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip []
					ch_1_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip []
					ch_0_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip }
					else { ch_3_0_101?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip [] ch_3_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip []
					ch_2_0_101?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip [] ch_2_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip []
					ch_1_0_101?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip [] ch_1_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip []
					ch_0_0_101?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip [] ch_0_0_101_s?[x[0] <= 8]x ->{RecvBuf_0_A_101_68 = x} -> MPI_Recv_0_A_101_68_ends -> Skip };
// Line 78
MPI_Recv_1_0_100_78() = MPI_Recv_1_0_100_78_starts -> if( 40 > threshold ) { ch_0_1_100_s?[x[0] <= 40]x ->{RecvBuf_1_0_100_78 = x} -> MPI_Recv_1_0_100_78_ends -> Skip }
					else { ch_0_1_100?[x[0] <= 40]x ->{RecvBuf_1_0_100_78 = x} -> MPI_Recv_1_0_100_78_ends -> Skip [] ch_0_1_100_s?[x[0] <= 40]x ->{RecvBuf_1_0_100_78 = x} -> MPI_Recv_1_0_100_78_ends -> Skip };
// Line 83
MPI_Send_1_0_101_83() = MPI_Send_1_0_101_83_starts -> if( 8 > threshold ) { ch_1_0_101_s!SendBuf_1_0_101_83 -> MPI_Send_1_0_101_83_ends -> Skip } else { ch_1_0_101!SendBuf_1_0_101_83 -> MPI_Send_1_0_101_83_ends -> Skip };
// Line 78
MPI_Recv_2_0_100_78() = MPI_Recv_2_0_100_78_starts -> if( 40 > threshold ) { ch_0_2_100_s?[x[0] <= 40]x ->{RecvBuf_2_0_100_78 = x} -> MPI_Recv_2_0_100_78_ends -> Skip }
					else { ch_0_2_100?[x[0] <= 40]x ->{RecvBuf_2_0_100_78 = x} -> MPI_Recv_2_0_100_78_ends -> Skip [] ch_0_2_100_s?[x[0] <= 40]x ->{RecvBuf_2_0_100_78 = x} -> MPI_Recv_2_0_100_78_ends -> Skip };
// Line 83
MPI_Send_2_0_101_83() = MPI_Send_2_0_101_83_starts -> if( 8 > threshold ) { ch_2_0_101_s!SendBuf_2_0_101_83 -> MPI_Send_2_0_101_83_ends -> Skip } else { ch_2_0_101!SendBuf_2_0_101_83 -> MPI_Send_2_0_101_83_ends -> Skip };
// Line 78
MPI_Recv_3_0_100_78() = MPI_Recv_3_0_100_78_starts -> if( 40 > threshold ) { ch_0_3_100_s?[x[0] <= 40]x ->{RecvBuf_3_0_100_78 = x} -> MPI_Recv_3_0_100_78_ends -> Skip }
					else { ch_0_3_100?[x[0] <= 40]x ->{RecvBuf_3_0_100_78 = x} -> MPI_Recv_3_0_100_78_ends -> Skip [] ch_0_3_100_s?[x[0] <= 40]x ->{RecvBuf_3_0_100_78 = x} -> MPI_Recv_3_0_100_78_ends -> Skip };
// Line 83
MPI_Send_3_0_101_83() = MPI_Send_3_0_101_83_starts -> if( 8 > threshold ) { ch_3_0_101_s!SendBuf_3_0_101_83 -> MPI_Send_3_0_101_83_ends -> Skip } else { ch_3_0_101!SendBuf_3_0_101_83 -> MPI_Send_3_0_101_83_ends -> Skip };

P0() = (MPI_Send_0_1_100_62(); MPI_Send_0_2_100_62(); MPI_Send_0_3_100_62(); MPI_Recv_0_A_101_68(); MPI_Recv_0_A_101_68(); MPI_Recv_0_A_101_68())[][exit_ == true]Skip;
P1() = (MPI_Recv_1_0_100_78(); MPI_Send_1_0_101_83())[][exit_ == true]Skip;
P2() = (MPI_Recv_2_0_100_78(); MPI_Send_2_0_101_83())[][exit_ == true]Skip;
P3() = (MPI_Recv_3_0_100_78(); MPI_Send_3_0_101_83())[][exit_ == true]Skip;
Prog() = P0() || P1() || P2() || P3();
Prog1() = {threshold = 0} -> Prog();

#assert Prog() deadlockfree;
#assert Prog1() deadlockfree;
