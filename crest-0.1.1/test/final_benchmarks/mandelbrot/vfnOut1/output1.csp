//@@MpiTrace@@

channel ch_0_1_0_s 0;
channel ch_0_1_0 2;
channel ch_0_2_0_s 0;
channel ch_0_2_0 2;
channel ch_0_3_0_s 0;
channel ch_0_3_0 2;
channel ch_0_4_0_s 0;
channel ch_0_4_0 2;
channel ch_0_5_0_s 0;
channel ch_0_5_0 2;
channel ch_1_0_5 1;
channel ch_1_0_0_s 0;
channel ch_1_0_7 1;
channel ch_1_0_7_s 0;
channel ch_1_0_0 1;
channel ch_1_0_9_s 0;
channel ch_1_0_9 1;
channel ch_1_0_5_s 0;
channel ch_2_0_1_s 0;
channel ch_2_0_1 1;
channel ch_3_0_6 1;
channel ch_3_0_6_s 0;
channel ch_3_0_2_s 0;
channel ch_3_0_2 1;
channel ch_3_0_8_s 0;
channel ch_3_0_8 1;
channel ch_4_0_3 1;
channel ch_4_0_3_s 0;
channel ch_5_0_4_s 0;
channel ch_5_0_4 1;
channel ch_0_3_1_s 0;
channel ch_0_3_1 2;
channel ch_0_1_1_s 0;
channel ch_0_1_1 2;
channel ch_0_5_1_s 0;
channel ch_0_5_1 2;
channel ch_0_4_1_s 0;
channel ch_0_4_1 2;
channel ch_0_2_1_s 0;
channel ch_0_2_1 2;

var threshold = 131072;
var exit_ = false;
var num_procs = 6;
var SendBuf_0_1_0_238 = [4];
var SendBuf_0_2_0_238 = [4];
var SendBuf_0_3_0_238 = [4];
var SendBuf_0_4_0_238 = [4];
var SendBuf_0_5_0_238 = [4];
var RecvBuf_0_A_A_250[1];
var SendBuf_0_3_1_262 = [4];
var SendBuf_0_1_1_262 = [4];
var SendBuf_0_5_1_262 = [4];
var SendBuf_0_4_1_262 = [4];
var SendBuf_0_2_1_262 = [4];
var c1140850688 = 0;
var RecvBuf_1_0_A_149[1];
var SendBuf_1_0_0_160 = [12];
var SendBuf_1_0_5_160 = [12];
var SendBuf_1_0_7_160 = [12];
var SendBuf_1_0_9_160 = [12];
var RecvBuf_2_0_A_149[1];
var SendBuf_2_0_1_160 = [12];
var RecvBuf_3_0_A_149[1];
var SendBuf_3_0_2_160 = [12];
var SendBuf_3_0_6_160 = [12];
var SendBuf_3_0_8_160 = [12];
var RecvBuf_4_0_A_149[1];
var SendBuf_4_0_3_160 = [12];
var RecvBuf_5_0_A_149[1];
var SendBuf_5_0_4_160 = [12];

// Line 238
MPI_Send_0_1_0_238() = MPI_Send_0_1_0_238_starts -> if( 4 > threshold ) { ch_0_1_0_s!SendBuf_0_1_0_238 -> MPI_Send_0_1_0_238_ends -> Skip } else { ch_0_1_0!SendBuf_0_1_0_238 -> MPI_Send_0_1_0_238_ends -> Skip };
// Line 238
MPI_Send_0_2_0_238() = MPI_Send_0_2_0_238_starts -> if( 4 > threshold ) { ch_0_2_0_s!SendBuf_0_2_0_238 -> MPI_Send_0_2_0_238_ends -> Skip } else { ch_0_2_0!SendBuf_0_2_0_238 -> MPI_Send_0_2_0_238_ends -> Skip };
// Line 238
MPI_Send_0_3_0_238() = MPI_Send_0_3_0_238_starts -> if( 4 > threshold ) { ch_0_3_0_s!SendBuf_0_3_0_238 -> MPI_Send_0_3_0_238_ends -> Skip } else { ch_0_3_0!SendBuf_0_3_0_238 -> MPI_Send_0_3_0_238_ends -> Skip };
// Line 238
MPI_Send_0_4_0_238() = MPI_Send_0_4_0_238_starts -> if( 4 > threshold ) { ch_0_4_0_s!SendBuf_0_4_0_238 -> MPI_Send_0_4_0_238_ends -> Skip } else { ch_0_4_0!SendBuf_0_4_0_238 -> MPI_Send_0_4_0_238_ends -> Skip };
// Line 238
MPI_Send_0_5_0_238() = MPI_Send_0_5_0_238_starts -> if( 4 > threshold ) { ch_0_5_0_s!SendBuf_0_5_0_238 -> MPI_Send_0_5_0_238_ends -> Skip } else { ch_0_5_0!SendBuf_0_5_0_238 -> MPI_Send_0_5_0_238_ends -> Skip };
// Line 250
MPI_Recv_0_A_A_250() = MPI_Recv_0_A_A_250_starts -> if( 12 > threshold ) { ch_5_0_4_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_4_0_3_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_3_0_8_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_3_0_6_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_3_0_2_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_2_0_1_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_9_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_7_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_5_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_0_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip }
					else { ch_5_0_4?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_5_0_4_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_4_0_3?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_4_0_3_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_3_0_8?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_3_0_8_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_3_0_6?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_3_0_6_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_3_0_2?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_3_0_2_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_2_0_1?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_2_0_1_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_9?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_1_0_9_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_7?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_1_0_7_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_5?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_1_0_5_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip []
					ch_1_0_0?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip [] ch_1_0_0_s?[x[0] <= 12]x ->{RecvBuf_0_A_A_250 = x} -> MPI_Recv_0_A_A_250_ends -> Skip };
// Line 262
MPI_Send_0_3_1_262() = MPI_Send_0_3_1_262_starts -> if( 4 > threshold ) { ch_0_3_1_s!SendBuf_0_3_1_262 -> MPI_Send_0_3_1_262_ends -> Skip } else { ch_0_3_1!SendBuf_0_3_1_262 -> MPI_Send_0_3_1_262_ends -> Skip };
// Line 262
MPI_Send_0_1_1_262() = MPI_Send_0_1_1_262_starts -> if( 4 > threshold ) { ch_0_1_1_s!SendBuf_0_1_1_262 -> MPI_Send_0_1_1_262_ends -> Skip } else { ch_0_1_1!SendBuf_0_1_1_262 -> MPI_Send_0_1_1_262_ends -> Skip };
// Line 262
MPI_Send_0_5_1_262() = MPI_Send_0_5_1_262_starts -> if( 4 > threshold ) { ch_0_5_1_s!SendBuf_0_5_1_262 -> MPI_Send_0_5_1_262_ends -> Skip } else { ch_0_5_1!SendBuf_0_5_1_262 -> MPI_Send_0_5_1_262_ends -> Skip };
// Line 262
MPI_Send_0_4_1_262() = MPI_Send_0_4_1_262_starts -> if( 4 > threshold ) { ch_0_4_1_s!SendBuf_0_4_1_262 -> MPI_Send_0_4_1_262_ends -> Skip } else { ch_0_4_1!SendBuf_0_4_1_262 -> MPI_Send_0_4_1_262_ends -> Skip };
// Line 262
MPI_Send_0_2_1_262() = MPI_Send_0_2_1_262_starts -> if( 4 > threshold ) { ch_0_2_1_s!SendBuf_0_2_1_262 -> MPI_Send_0_2_1_262_ends -> Skip } else { ch_0_2_1!SendBuf_0_2_1_262 -> MPI_Send_0_2_1_262_ends -> Skip };
// Line 283
MPI_Barrier_0_1140850688() = MPI_Barrier_0_1140850688_starts -> {c1140850688++} -> ([c1140850688 %  num_procs == 0]e1140850688 -> Skip);
// Line 149
MPI_Recv_1_0_A_149() = MPI_Recv_1_0_A_149_starts -> if( 4 > threshold ) { ch_0_1_1_s?[x[0] <= 4]x ->{RecvBuf_1_0_A_149 = x} -> MPI_Recv_1_0_A_149_ends -> Skip []
					ch_0_1_0_s?[x[0] <= 4]x ->{RecvBuf_1_0_A_149 = x} -> MPI_Recv_1_0_A_149_ends -> Skip }
					else { ch_0_1_1?[x[0] <= 4]x ->{RecvBuf_1_0_A_149 = x} -> MPI_Recv_1_0_A_149_ends -> Skip [] ch_0_1_1_s?[x[0] <= 4]x ->{RecvBuf_1_0_A_149 = x} -> MPI_Recv_1_0_A_149_ends -> Skip []
					ch_0_1_0?[x[0] <= 4]x ->{RecvBuf_1_0_A_149 = x} -> MPI_Recv_1_0_A_149_ends -> Skip [] ch_0_1_0_s?[x[0] <= 4]x ->{RecvBuf_1_0_A_149 = x} -> MPI_Recv_1_0_A_149_ends -> Skip };
// Line 160
MPI_Send_1_0_0_160() = MPI_Send_1_0_0_160_starts -> if( 12 > threshold ) { ch_1_0_0_s!SendBuf_1_0_0_160 -> MPI_Send_1_0_0_160_ends -> Skip } else { ch_1_0_0!SendBuf_1_0_0_160 -> MPI_Send_1_0_0_160_ends -> Skip };
// Line 160
MPI_Send_1_0_5_160() = MPI_Send_1_0_5_160_starts -> if( 12 > threshold ) { ch_1_0_5_s!SendBuf_1_0_5_160 -> MPI_Send_1_0_5_160_ends -> Skip } else { ch_1_0_5!SendBuf_1_0_5_160 -> MPI_Send_1_0_5_160_ends -> Skip };
// Line 160
MPI_Send_1_0_7_160() = MPI_Send_1_0_7_160_starts -> if( 12 > threshold ) { ch_1_0_7_s!SendBuf_1_0_7_160 -> MPI_Send_1_0_7_160_ends -> Skip } else { ch_1_0_7!SendBuf_1_0_7_160 -> MPI_Send_1_0_7_160_ends -> Skip };
// Line 160
MPI_Send_1_0_9_160() = MPI_Send_1_0_9_160_starts -> if( 12 > threshold ) { ch_1_0_9_s!SendBuf_1_0_9_160 -> MPI_Send_1_0_9_160_ends -> Skip } else { ch_1_0_9!SendBuf_1_0_9_160 -> MPI_Send_1_0_9_160_ends -> Skip };
// Line 283
MPI_Barrier_1_1140850688() = MPI_Barrier_1_1140850688_starts -> {c1140850688++} -> ([c1140850688 %  num_procs == 0]e1140850688 -> Skip);
// Line 149
MPI_Recv_2_0_A_149() = MPI_Recv_2_0_A_149_starts -> if( 4 > threshold ) { ch_0_2_1_s?[x[0] <= 4]x ->{RecvBuf_2_0_A_149 = x} -> MPI_Recv_2_0_A_149_ends -> Skip []
					ch_0_2_0_s?[x[0] <= 4]x ->{RecvBuf_2_0_A_149 = x} -> MPI_Recv_2_0_A_149_ends -> Skip }
					else { ch_0_2_1?[x[0] <= 4]x ->{RecvBuf_2_0_A_149 = x} -> MPI_Recv_2_0_A_149_ends -> Skip [] ch_0_2_1_s?[x[0] <= 4]x ->{RecvBuf_2_0_A_149 = x} -> MPI_Recv_2_0_A_149_ends -> Skip []
					ch_0_2_0?[x[0] <= 4]x ->{RecvBuf_2_0_A_149 = x} -> MPI_Recv_2_0_A_149_ends -> Skip [] ch_0_2_0_s?[x[0] <= 4]x ->{RecvBuf_2_0_A_149 = x} -> MPI_Recv_2_0_A_149_ends -> Skip };
// Line 160
MPI_Send_2_0_1_160() = MPI_Send_2_0_1_160_starts -> if( 12 > threshold ) { ch_2_0_1_s!SendBuf_2_0_1_160 -> MPI_Send_2_0_1_160_ends -> Skip } else { ch_2_0_1!SendBuf_2_0_1_160 -> MPI_Send_2_0_1_160_ends -> Skip };
// Line 283
MPI_Barrier_2_1140850688() = MPI_Barrier_2_1140850688_starts -> {c1140850688++} -> ([c1140850688 %  num_procs == 0]e1140850688 -> Skip);
// Line 149
MPI_Recv_3_0_A_149() = MPI_Recv_3_0_A_149_starts -> if( 4 > threshold ) { ch_0_3_1_s?[x[0] <= 4]x ->{RecvBuf_3_0_A_149 = x} -> MPI_Recv_3_0_A_149_ends -> Skip []
					ch_0_3_0_s?[x[0] <= 4]x ->{RecvBuf_3_0_A_149 = x} -> MPI_Recv_3_0_A_149_ends -> Skip }
					else { ch_0_3_1?[x[0] <= 4]x ->{RecvBuf_3_0_A_149 = x} -> MPI_Recv_3_0_A_149_ends -> Skip [] ch_0_3_1_s?[x[0] <= 4]x ->{RecvBuf_3_0_A_149 = x} -> MPI_Recv_3_0_A_149_ends -> Skip []
					ch_0_3_0?[x[0] <= 4]x ->{RecvBuf_3_0_A_149 = x} -> MPI_Recv_3_0_A_149_ends -> Skip [] ch_0_3_0_s?[x[0] <= 4]x ->{RecvBuf_3_0_A_149 = x} -> MPI_Recv_3_0_A_149_ends -> Skip };
// Line 160
MPI_Send_3_0_2_160() = MPI_Send_3_0_2_160_starts -> if( 12 > threshold ) { ch_3_0_2_s!SendBuf_3_0_2_160 -> MPI_Send_3_0_2_160_ends -> Skip } else { ch_3_0_2!SendBuf_3_0_2_160 -> MPI_Send_3_0_2_160_ends -> Skip };
// Line 160
MPI_Send_3_0_6_160() = MPI_Send_3_0_6_160_starts -> if( 12 > threshold ) { ch_3_0_6_s!SendBuf_3_0_6_160 -> MPI_Send_3_0_6_160_ends -> Skip } else { ch_3_0_6!SendBuf_3_0_6_160 -> MPI_Send_3_0_6_160_ends -> Skip };
// Line 160
MPI_Send_3_0_8_160() = MPI_Send_3_0_8_160_starts -> if( 12 > threshold ) { ch_3_0_8_s!SendBuf_3_0_8_160 -> MPI_Send_3_0_8_160_ends -> Skip } else { ch_3_0_8!SendBuf_3_0_8_160 -> MPI_Send_3_0_8_160_ends -> Skip };
// Line 283
MPI_Barrier_3_1140850688() = MPI_Barrier_3_1140850688_starts -> {c1140850688++} -> ([c1140850688 %  num_procs == 0]e1140850688 -> Skip);
// Line 149
MPI_Recv_4_0_A_149() = MPI_Recv_4_0_A_149_starts -> if( 4 > threshold ) { ch_0_4_1_s?[x[0] <= 4]x ->{RecvBuf_4_0_A_149 = x} -> MPI_Recv_4_0_A_149_ends -> Skip []
					ch_0_4_0_s?[x[0] <= 4]x ->{RecvBuf_4_0_A_149 = x} -> MPI_Recv_4_0_A_149_ends -> Skip }
					else { ch_0_4_1?[x[0] <= 4]x ->{RecvBuf_4_0_A_149 = x} -> MPI_Recv_4_0_A_149_ends -> Skip [] ch_0_4_1_s?[x[0] <= 4]x ->{RecvBuf_4_0_A_149 = x} -> MPI_Recv_4_0_A_149_ends -> Skip []
					ch_0_4_0?[x[0] <= 4]x ->{RecvBuf_4_0_A_149 = x} -> MPI_Recv_4_0_A_149_ends -> Skip [] ch_0_4_0_s?[x[0] <= 4]x ->{RecvBuf_4_0_A_149 = x} -> MPI_Recv_4_0_A_149_ends -> Skip };
// Line 160
MPI_Send_4_0_3_160() = MPI_Send_4_0_3_160_starts -> if( 12 > threshold ) { ch_4_0_3_s!SendBuf_4_0_3_160 -> MPI_Send_4_0_3_160_ends -> Skip } else { ch_4_0_3!SendBuf_4_0_3_160 -> MPI_Send_4_0_3_160_ends -> Skip };
// Line 283
MPI_Barrier_4_1140850688() = MPI_Barrier_4_1140850688_starts -> {c1140850688++} -> ([c1140850688 %  num_procs == 0]e1140850688 -> Skip);
// Line 149
MPI_Recv_5_0_A_149() = MPI_Recv_5_0_A_149_starts -> if( 4 > threshold ) { ch_0_5_1_s?[x[0] <= 4]x ->{RecvBuf_5_0_A_149 = x} -> MPI_Recv_5_0_A_149_ends -> Skip []
					ch_0_5_0_s?[x[0] <= 4]x ->{RecvBuf_5_0_A_149 = x} -> MPI_Recv_5_0_A_149_ends -> Skip }
					else { ch_0_5_1?[x[0] <= 4]x ->{RecvBuf_5_0_A_149 = x} -> MPI_Recv_5_0_A_149_ends -> Skip [] ch_0_5_1_s?[x[0] <= 4]x ->{RecvBuf_5_0_A_149 = x} -> MPI_Recv_5_0_A_149_ends -> Skip []
					ch_0_5_0?[x[0] <= 4]x ->{RecvBuf_5_0_A_149 = x} -> MPI_Recv_5_0_A_149_ends -> Skip [] ch_0_5_0_s?[x[0] <= 4]x ->{RecvBuf_5_0_A_149 = x} -> MPI_Recv_5_0_A_149_ends -> Skip };
// Line 160
MPI_Send_5_0_4_160() = MPI_Send_5_0_4_160_starts -> if( 12 > threshold ) { ch_5_0_4_s!SendBuf_5_0_4_160 -> MPI_Send_5_0_4_160_ends -> Skip } else { ch_5_0_4!SendBuf_5_0_4_160 -> MPI_Send_5_0_4_160_ends -> Skip };
// Line 283
MPI_Barrier_5_1140850688() = MPI_Barrier_5_1140850688_starts -> {c1140850688++} -> ([c1140850688 %  num_procs == 0]e1140850688 -> Skip);

P0() = (MPI_Send_0_1_0_238(); MPI_Send_0_2_0_238(); MPI_Send_0_3_0_238(); MPI_Send_0_4_0_238(); MPI_Send_0_5_0_238(); MPI_Recv_0_A_A_250(); MPI_Send_0_1_0_238(); MPI_Recv_0_A_A_250(); MPI_Send_0_3_0_238(); MPI_Recv_0_A_A_250(); MPI_Send_0_1_0_238(); MPI_Recv_0_A_A_250(); MPI_Send_0_3_0_238(); MPI_Recv_0_A_A_250(); MPI_Send_0_1_0_238(); MPI_Recv_0_A_A_250(); MPI_Send_0_3_1_262(); MPI_Recv_0_A_A_250(); MPI_Send_0_1_1_262(); MPI_Recv_0_A_A_250(); MPI_Send_0_5_1_262(); MPI_Recv_0_A_A_250(); MPI_Send_0_4_1_262(); MPI_Recv_0_A_A_250(); MPI_Send_0_2_1_262(); MPI_Barrier_0_1140850688())[][exit_ == true]Skip;
P1() = (MPI_Recv_1_0_A_149(); MPI_Send_1_0_0_160(); MPI_Recv_1_0_A_149(); MPI_Send_1_0_5_160(); MPI_Recv_1_0_A_149(); MPI_Send_1_0_7_160(); MPI_Recv_1_0_A_149(); MPI_Send_1_0_9_160(); MPI_Recv_1_0_A_149(); MPI_Barrier_1_1140850688())[][exit_ == true]Skip;
P2() = (MPI_Recv_2_0_A_149(); MPI_Send_2_0_1_160(); MPI_Recv_2_0_A_149(); MPI_Barrier_2_1140850688())[][exit_ == true]Skip;
P3() = (MPI_Recv_3_0_A_149(); MPI_Send_3_0_2_160(); MPI_Recv_3_0_A_149(); MPI_Send_3_0_6_160(); MPI_Recv_3_0_A_149(); MPI_Send_3_0_8_160(); MPI_Recv_3_0_A_149(); MPI_Barrier_3_1140850688())[][exit_ == true]Skip;
P4() = (MPI_Recv_4_0_A_149(); MPI_Send_4_0_3_160(); MPI_Recv_4_0_A_149(); MPI_Barrier_4_1140850688())[][exit_ == true]Skip;
P5() = (MPI_Recv_5_0_A_149(); MPI_Send_5_0_4_160(); MPI_Recv_5_0_A_149(); MPI_Barrier_5_1140850688())[][exit_ == true]Skip;
Prog() = P0() || P1() || P2() || P3() || P4() || P5();
Prog1() = {threshold = 0} -> Prog();

#assert Prog() deadlockfree;
#assert Prog1() deadlockfree;
