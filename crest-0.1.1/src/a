g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o libcrest/crest.o libcrest/crest.cc
In file included from /usr/include/c++/5/ext/hash_map:60:0,
                 from ./base/symbolic_interpreter.h:16,
                 from libcrest/crest.cc:16:
/usr/include/c++/5/backward/backward_warning.h:32:2: warning: #warning This file includes at least one deprecated or antiquated header which may be removed without further notice at a future date. Please use a non-deprecated interface with equivalent functionality instead. For a listing of replacement headers and interfaces, consult the file backward_warning.h. To disable this warning use -Wno-deprecated. [-Wcpp]
 #warning \
  ^
In file included from libcrest/crest.cc:17:0:
./libcrest/crest.h:166:1: warning: ‘typedef’ was ignored in this declaration
 };
 ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:177:27: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestInit() __SKIP;
                           ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:178:66: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestLoad(__CREST_ID, __CREST_ADDR, __CREST_VALUE) __SKIP;
                                                                  ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:179:52: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestStore(__CREST_ID, __CREST_ADDR) __SKIP;
                                                    ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:180:43: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestClearStack(__CREST_ID) __SKIP;
                                           ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:181:66: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestApply1(__CREST_ID, __CREST_OP, __CREST_VALUE) __SKIP;
                                                                  ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:182:66: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestApply2(__CREST_ID, __CREST_OP, __CREST_VALUE) __SKIP;
                                                                  ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:183:72: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestBranch(__CREST_ID, __CREST_BRANCH_ID, __CREST_BOOL) __SKIP;
                                                                        ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:184:58: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestCall(__CREST_ID, __CREST_FUNCTION_ID) __SKIP;
                                                          ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:185:39: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestReturn(__CREST_ID) __SKIP;
                                       ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:186:60: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestHandleReturn(__CREST_ID, __CREST_VALUE) __SKIP;
                                                            ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:187:52: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestDump(__CREST_ID, __CREST_VALUE) __SKIP;
                                                    ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:215:44: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestUChar(unsigned char* x) __SKIP;
                                            ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:216:46: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestUShort(unsigned short* x) __SKIP;
                                              ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:217:42: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestUInt(unsigned int* x) __SKIP;
                                          ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:218:34: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestChar(char* x) __SKIP;
                                  ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:219:36: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestShort(short* x) __SKIP;
                                    ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:220:32: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestInt(int* x) __SKIP;
                                ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:222:81: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestUCharTrace(unsigned char* x, unsigned char c, char* iprange) __SKIP;
                                                                                 ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:223:84: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestUShortTrace(unsigned short* x, unsigned short c, char* iprange) __SKIP;
                                                                                    ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:224:78: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestUIntTrace(unsigned int* x, unsigned int c, char* iprange) __SKIP;
                                                                              ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:225:62: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestCharTrace(char* x, char c, char* iprange) __SKIP;
                                                              ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:226:65: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestShortTrace(short* x, short c, char* iprange) __SKIP;
                                                                 ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:227:59: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestIntTrace(int* x, int c, char* iprange) __SKIP;
                                                           ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:229:74: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestVarMap(void* addr, char *name, int tp, char* trigger) __SKIP;
                                                                          ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:230:88: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestLogState(unsigned int x, int r_w, int line, char *varname, int val) __SKIP;//aakanksha
                                                                                        ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:231:47: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestLogState_1(unsigned int x) __SKIP;
                                               ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:232:47: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestLogState_2(unsigned int x) __SKIP;
                                               ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:233:42: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestLogPC(unsigned int x) __SKIP;
                                          ^
./libcrest/crest.h:172:42: warning: ‘crest_skip’ attribute directive ignored [-Wattributes]
 #define __SKIP __attribute__((crest_skip))
                                          ^
./libcrest/crest.h:234:56: note: in expansion of macro ‘__SKIP’
 EXTERN void __CrestLogSpec(char *op,int *op1,int *op2) __SKIP;
                                                        ^
libcrest/crest.cc:235:72: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
 void __CrestVarMap(void* addr, char* name, int tp, char* trigger="true") {
                                                                        ^
g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o base/basic_types.o base/basic_types.cc
base/basic_types.cc:55:37: warning: narrowing conversion of ‘std::numeric_limits<long unsigned int>::min()’ from ‘long unsigned int’ to ‘crest::value_t {aka long long int}’ inside { } is ill-formed in C++11 [-Wnarrowing]
   numeric_limits<unsigned long>::min(),
                                     ^
base/basic_types.cc:57:42: warning: narrowing conversion of ‘std::numeric_limits<long long unsigned int>::min()’ from ‘long long unsigned int’ to ‘crest::value_t {aka long long int}’ inside { } is ill-formed in C++11 [-Wnarrowing]
   numeric_limits<unsigned long long>::min(),
                                          ^
base/basic_types.cc:68:37: warning: narrowing conversion of ‘std::numeric_limits<long unsigned int>::max()’ from ‘long unsigned int’ to ‘crest::value_t {aka long long int}’ inside { } is ill-formed in C++11 [-Wnarrowing]
   numeric_limits<unsigned long>::max(),
                                     ^
base/basic_types.cc:70:42: warning: narrowing conversion of ‘std::numeric_limits<long long unsigned int>::max()’ from ‘long long unsigned int’ to ‘crest::value_t {aka long long int}’ inside { } is ill-formed in C++11 [-Wnarrowing]
   numeric_limits<unsigned long long>::max(),
                                          ^
g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o base/symbolic_execution.o base/symbolic_execution.cc
g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o base/symbolic_interpreter.o base/symbolic_interpreter.cc
In file included from /usr/include/c++/5/ext/hash_map:60:0,
                 from ./base/symbolic_interpreter.h:16,
                 from base/symbolic_interpreter.cc:19:
/usr/include/c++/5/backward/backward_warning.h:32:2: warning: #warning This file includes at least one deprecated or antiquated header which may be removed without further notice at a future date. Please use a non-deprecated interface with equivalent functionality instead. For a listing of replacement headers and interfaces, consult the file backward_warning.h. To disable this warning use -Wno-deprecated. [-Wcpp]
 #warning \
  ^
In file included from base/symbolic_interpreter.cc:19:0:
./base/symbolic_interpreter.h: In constructor ‘crest::SymbolicInterpreter::SymbolicInterpreter()’:
./base/symbolic_interpreter.h:98:21: warning: ‘crest::SymbolicInterpreter::ex_’ will be initialized after [-Wreorder]
   SymbolicExecution ex_;
                     ^
./base/symbolic_interpreter.h:42:16: warning:   ‘unsigned int crest::SymbolicInterpreter::num_inputs_’ [-Wreorder]
   unsigned int num_inputs_;
                ^
base/symbolic_interpreter.cc:37:5: warning:   when initialized here [-Wreorder]
     SymbolicInterpreter::SymbolicInterpreter()
     ^
base/symbolic_interpreter.cc: In member function ‘void crest::SymbolicInterpreter::DumpMemory()’:
base/symbolic_interpreter.cc:63:83: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘size_t {aka long unsigned int}’ [-Wformat=]
             fprintf(stderr, "s%d: %lld [ %s ]\n", i, stack_[i].concrete, s.c_str());
                                                                                   ^
base/symbolic_interpreter.cc: In member function ‘crest::value_t crest::SymbolicInterpreter::NewInputValue(crest::types::type_t, crest::addr_t, crest::value_t)’:
base/symbolic_interpreter.cc:314:5: warning: no return statement in function returning non-void [-Wreturn-type]
     }
     ^
base/symbolic_interpreter.cc: In member function ‘void crest::SymbolicInterpreter::ApplyLogState(int, int, int, char*, int)’:
base/symbolic_interpreter.cc:378:31: warning: zero-length gnu_printf format string [-Wformat-zero-length]
             fprintf(stderr,"" );
                               ^
base/symbolic_interpreter.cc:396:16: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
             if (mem_.find(i->first) == mem_.end())
                ^
base/symbolic_interpreter.cc: In member function ‘void crest::SymbolicInterpreter::ApplyLogState_1(int)’:
base/symbolic_interpreter.cc:465:12: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
         if (mem_.find(i->first) == mem_.end())
            ^
base/symbolic_interpreter.cc: In member function ‘void crest::SymbolicInterpreter::ApplyLogState_2(int)’:
base/symbolic_interpreter.cc:531:12: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
         if (mem_.find(i->first) == mem_.end())
            ^
g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o base/symbolic_path.o base/symbolic_path.cc
g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o base/symbolic_predicate.o base/symbolic_predicate.cc
g++ -I. -I/home/aakankha/PhD//yices-1.0.40/include -Wall -g -std=gnu++98 -DPRINT_FOR_TOOL   -c -o base/symbolic_expression.o base/symbolic_expression.cc
base/symbolic_expression.cc: In member function ‘void crest::SymbolicExpr::AppendToString(std::__cxx11::string*, int, unsigned int, unsigned int) const’:
base/symbolic_expression.cc:75:3: error: expected ‘}’ before ‘else’
   else if (tp == 'c')
   ^
base/symbolic_expression.cc:70:6: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
   if (tp == 'i')
      ^
base/symbolic_expression.cc:83:6: error: ‘else’ without a previous ‘if’
      else {
      ^
base/symbolic_expression.cc:84:41: error: name lookup of ‘i’ changed for ISO ‘for’ scoping [-fpermissive]
             sprintf(buff, ", x%u=%lld", i->first, i->second);
                                         ^
base/symbolic_expression.cc:84:41: note: (if you use ‘-fpermissive’ G++ will accept your code)
base/symbolic_expression.cc:85:3: error: ‘else’ without a previous ‘if’
   else if (tp == 'c')
   ^
base/symbolic_expression.cc: At global scope:
base/symbolic_expression.cc:93:3: error: ‘s’ does not name a type
   s->append("}");
   ^
base/symbolic_expression.cc:119:6: error: ‘SymbolicExpr’ has not been declared
 void SymbolicExpr::Serialize(string* s) const {
      ^
base/symbolic_expression.cc:119:41: error: non-member function ‘void Serialize(std::__cxx11::string*)’ cannot have cv-qualifier
 void SymbolicExpr::Serialize(string* s) const {
                                         ^
In file included from base/symbolic_expression.cc:11:0:
base/symbolic_expression.cc: In function ‘void Serialize(std::__cxx11::string*)’:
base/symbolic_expression.cc:120:10: error: ‘coeff_’ was not declared in this scope
   assert(coeff_.size() < 128);
          ^
base/symbolic_expression.cc:122:21: error: ‘const_’ was not declared in this scope
   s->append((char*)&const_, sizeof(value_t));
                     ^
base/symbolic_expression.cc:122:36: error: ‘value_t’ was not declared in this scope
   s->append((char*)&const_, sizeof(value_t));
                                    ^
base/symbolic_expression.cc:122:36: note: suggested alternative:
In file included from ./base/symbolic_expression.h:20:0,
                 from base/symbolic_expression.cc:13:
./base/basic_types.h:20:23: note:   ‘crest::value_t’
 typedef long long int value_t;
                       ^
base/symbolic_expression.cc:123:8: error: ‘ConstIt’ was not declared in this scope
   for (ConstIt i = coeff_.begin(); i != coeff_.end(); ++i) {
        ^
base/symbolic_expression.cc:123:8: note: suggested alternative:
base/symbolic_expression.cc:18:44: note:   ‘crest::ConstIt’
 typedef map<var_t,value_t>::const_iterator ConstIt;
                                            ^
base/symbolic_expression.cc:123:36: error: ‘i’ was not declared in this scope
   for (ConstIt i = coeff_.begin(); i != coeff_.end(); ++i) {
                                    ^
base/symbolic_expression.cc:124:40: error: ‘var_t’ was not declared in this scope
     s->append((char*)&i->first, sizeof(var_t));
                                        ^
base/symbolic_expression.cc:124:40: note: suggested alternative:
In file included from ./base/symbolic_expression.h:20:0,
                 from base/symbolic_expression.cc:13:
./base/basic_types.h:19:22: note:   ‘crest::var_t’
 typedef unsigned int var_t;
                      ^
base/symbolic_expression.cc: At global scope:
base/symbolic_expression.cc:130:6: error: ‘SymbolicExpr’ has not been declared
 bool SymbolicExpr::Parse(istream& s) {
      ^
base/symbolic_expression.cc: In function ‘bool Parse(std::istream&)’:
base/symbolic_expression.cc:132:18: error: ‘const_’ was not declared in this scope
   s.read((char*)&const_, sizeof(value_t));
                  ^
base/symbolic_expression.cc:132:33: error: ‘value_t’ was not declared in this scope
   s.read((char*)&const_, sizeof(value_t));
                                 ^
base/symbolic_expression.cc:132:33: note: suggested alternative:
In file included from ./base/symbolic_expression.h:20:0,
                 from base/symbolic_expression.cc:13:
./base/basic_types.h:20:23: note:   ‘crest::value_t’
 typedef long long int value_t;
                       ^
base/symbolic_expression.cc:136:3: error: ‘coeff_’ was not declared in this scope
   coeff_.clear();
   ^
base/symbolic_expression.cc:138:5: error: ‘var_t’ was not declared in this scope
     var_t v;
     ^
base/symbolic_expression.cc:138:5: note: suggested alternative:
In file included from ./base/symbolic_expression.h:20:0,
                 from base/symbolic_expression.cc:13:
./base/basic_types.h:19:22: note:   ‘crest::var_t’
 typedef unsigned int var_t;
                      ^
base/symbolic_expression.cc:139:13: error: expected ‘;’ before ‘c’
     value_t c;
             ^
base/symbolic_expression.cc:140:20: error: ‘v’ was not declared in this scope
     s.read((char*)&v, sizeof(v));
                    ^
base/symbolic_expression.cc:141:20: error: ‘c’ was not declared in this scope
     s.read((char*)&c, sizeof(c));
                    ^
base/symbolic_expression.cc: At global scope:
base/symbolic_expression.cc:149:7: error: ‘SymbolicExpr’ does not name a type
 const SymbolicExpr& SymbolicExpr::operator+=(const SymbolicExpr& e) {
       ^
base/symbolic_expression.cc:166:7: error: ‘SymbolicExpr’ does not name a type
 const SymbolicExpr& SymbolicExpr::operator-=(const SymbolicExpr& e) {
       ^
base/symbolic_expression.cc:183:7: error: ‘SymbolicExpr’ does not name a type
 const SymbolicExpr& SymbolicExpr::operator+=(value_t c) {
       ^
base/symbolic_expression.cc:189:7: error: ‘SymbolicExpr’ does not name a type
 const SymbolicExpr& SymbolicExpr::operator-=(value_t c) {
       ^
base/symbolic_expression.cc:195:7: error: ‘SymbolicExpr’ does not name a type
 const SymbolicExpr& SymbolicExpr::operator*=(value_t c) {
       ^
base/symbolic_expression.cc:208:6: error: ‘SymbolicExpr’ has not been declared
 bool SymbolicExpr::operator==(const SymbolicExpr& e) const {
      ^
base/symbolic_expression.cc:208:37: error: ‘SymbolicExpr’ does not name a type
 bool SymbolicExpr::operator==(const SymbolicExpr& e) const {
                                     ^
base/symbolic_expression.cc:208:54: error: non-member function ‘bool operator==(const int&)’ cannot have cv-qualifier
 bool SymbolicExpr::operator==(const SymbolicExpr& e) const {
                                                      ^
base/symbolic_expression.cc:208:54: error: ‘bool operator==(const int&)’ must have an argument of class or enumerated type
base/symbolic_expression.cc:213:1: error: expected declaration before ‘}’ token
 }  // namespace crest
 ^
<builtin>: recipe for target 'base/symbolic_expression.o' failed
make: *** [base/symbolic_expression.o] Error 1
